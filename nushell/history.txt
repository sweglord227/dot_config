http
http get google.com
http get https://google.com
clear
ls
eza
cd
oxide
eza
zoxide
z
zoxide 
ls
hrlp
help
sys host
fetch
fastfetch
http get 127.0.0.1
http get http://127.0.0.1
chsh zu
export 
module export PATH=$PATH:/
module export "PATH=$PATH:/.cargo/bin"
module export |PATH=$PATH:/.cargo/bin|<\n>
man module
help module
export
ls
ls -a
nvim .config/nushell/env.nu
exit
nu
exit
path add ($env.CARGO_HOME | path join "bin")
use std "path add"
path add ($env.CARGO_HOME | path join "bin")
path add ($env.HOME/.cargo/ | path join "bin")
path add (HOME/.cargo/ | path join "bin")
path add (!/.cargo/ | path join "bin")
path add (~/.cargo/ | path join "bin")
path add ($env.HOME/.cargo/ | path join "bin")
path add ($env.HOME | path join "bin")
path add ($env.HOME | path join ".cargo/bin")
exit
nu
chsh zu
chsh ./.cargo/bin/zu
cd .cargo/bin/
find zu
ls
chsh nu
chsh ./nu
cd
chsh ./.cargo/bin/nu
ls
find nu
find nu ./
find ./ -name nu
help find 
ls --tree
ls | find nu
clear
help clear
clear
help nvim
man nvim
clear
finger sweglord227
paru
clear
nu
nvim .config/nushell/env.nu
exit
nu
exit
chsh
chsh -l
sudo mv .cargo/bin/nu /usr/bin/
sudoedit /etc/shells
chsh nu
chsh
reboot
nvim .config/nushell/config.nu
ls
nvim .config/zsh/zshrc
ls
cd .config/zsh/ls
cd .config/zsh/
ls
nvim zprofile
date
date now
date humanize 
date humanize now
date humanize
date now
date
timedatectl
nvim
clear
nvim .config/nushell/config.nu
cd code
cd ..
cd 
cd Code/rust/swegsite/app/
cd ..
ls
enter api/
enter ../app/
shells 
shells --help
n
exit
shells
clear
env
env | find HYPRLAND
nu --help
nvim .config/
cd .config/
ls
env | find HYPRLAND
env | find xdg
env | find XDG
clear
Hyprland
clear
nvim .config/nushell/env.nu
nu nev
nu env
nvim .config/hypr/hyprland.conf
env
reboot
config env
nvim .config/nushell/env.nu
htlp get
help get
$env | get -i Hyprland
if ($env | get -i Hyprland)
if ($env | get -i Hyprland) == nothing
if ($env | get -i Hyprland) == $nothing
$nothing 
clear
ls
clear
exit
nvim .config/nvim/lua/config/options.lua
alias
alias cd="z"
alias cd = "z"
z
eval 
zoxide init posix --hook prompt
zoxide init nu
zoxide init nushell
cd
cd api
z api
echo $env.CONFIG_HOME
echo $env.XDG_CONFIG_HOME
$env.XDG_CONFIG_HOME
$env
$env | find config
$env | find home
$env | get config
$env | grep config
$env
zoxide init nushell
config nu
z
clear
zi
clear
nvim .config/nushell/zoxide.nu
cd
cdi
clear
cd api
cleaer
clear
cd app
ls
clear
cd
$env | get Hyprland
$env | get -i Hyprland
$env
reboot
clear
config nu
nvim .config/nushell/env.nu
config nu
$env
$env | get config
exec .config/nushell/env.nu
source
source .config/nushell/env.nu
$env | get config
config nu
if ($env | get -i HYPRLAND_INSTANCE_SIGNATURE) == $nothing
./test.nu
nu ./test.nu
nvim .config/nvim/init.lua
nvim test.nu
config nu
nu ./test.nu
config nu
nvim test.nu
nu ./test.nu
nvim test.nu
clear
env
$env
$env | get COMPOSITOR
$env | get COMPOSITOR_RUNNING
config nu
reboot
$env
$env | get HYPRLAND
$env | get HYPRLAND*
$env | find HYPRLAND
$env | find HYPR
$env | find H
$env | exclude config
$env | not config
clear
config nu
nvim
config nu
$env | get config
source .config/nushell/env.nu
$env | get config
nvim .config/nushell/env.nu
source .config/nushell/env.nu
nothing
eval nothing
echo nothing
echo nothing == $env.asdasdsd
echo nothing == $env | get -i asdasdsd
echo "nothing == $env | get -i asdasdsd"
nothing == $env | get -i asdasdsd
$nothing == $env | get -i asdasdsd
echo null
echo nothing
echo null
config nu
reboot
ls
fastfetch
rm test.nu
ls
clear
cargo install bat
config nu
cat
man cat
man bat
alias
alias --help
alias cat = "bat"
alias cat = "exec bat"
config nu
cat
ls
cd api
bat
clear
bat
clear
config nu
cat
clear
cat
ripgrep
cd api
cat Cargo.toml
cat src/main.rs
clear
find
help find
clear
cd
cargo install ripgrep
config nu
grep
config nu
grep
rg
clear
cd api
rg main
rg --help
man rg
rg find main
rg -f main
rg --file main
rg --file ./ main
rg --file ./
rg main
cd ..
rg main
cd /
rg main
clear
cd
cargo install bacon
cd api
bacon
man bacon
bacon --help
bacon -d
bacon 
bacon -r
bacon --help
bacon run
cd api
bacon run
cd app
bacon run
trunk watch
clear
cargo install cargo-info
cargo info serde
cargo-binsall
cargo install binstall
cargo install cargo-binstall
cargo alias
cargo
cargo binstall
cargo bupdate
cargo update
rustup update
cargo upgrade
clear
config nu
cinstall
clear
ls -alh
ls -l
ls -a
ls -h
ls -l -h
ls -ls
ls -l
ls -s
ls
ls -l
ls -l | get
ls -l | get *
ls -l | get all
ls -l | get name
ls -l | find
ls -l | find *
ls -l | find row
ls -l | row
ls -l | roll down
ls -l
ls -h
ls -d
cd code
ls -d
cd ..
ls -d
ls -ad
sort
sort -h
ls -ad | sort 
ls -ad | find size | sort 
ls -ad | get size | sort 
ls -ad | sort-by size
cd .local/
ls -ad | sort-by size
cd share/
ls -ad | sort-by size
clear
ls
ls -a
ls
ls -l
echo ls -l
echo (ls -l)
http -h
alias
config nu
cinstall neovide
cargo install neovide
paru neovide
neovide
cd .config/
ls
mkdir neovide
cp nvim/* neovide/
cp -r nvim/* neovide/
neovide
cd app
ls
exit
neovide src/
nvim
paru -R neovice
paru -R neovide
cd .con
ls
rm -rf neovide/
pkill -kill steam
clear
kill --help
pkill --help
clear
kill
kill --help
ps | find steam
ps | find discord
ps
ps | sortby mem
ps | sort-by mem
ps | sort-by cpu
ps | sort-by cpu -r
ps | sort-by cpu
top
clear
ps --help
ops
help
sys
sys --help
sys cpu
clear
ls
clear
sys mem
sys --help
sys temp
sys net
sys --help
sus
cd ..
cd
sys --help
sys disks
sys cpu
sys cpu | get cpu_usage
for --help
for x in (sys cpu | get usage) { print ($x + $x)}
for x in (sys cpu | get cpu_usage) { print ($x + $x)}
for x in (sys cpu | get cpu_usage) { print (y += $x)}
y = 0
let y = 0
for x in (sys cpu | get cpu_usage) { print (y += $x)}
for x in (sys cpu | get cpu_usage) { print (mut y += $x)}
mut y = 0 | for x in (sys cpu | get cpu_usage) {$y += $x} | echo $y
ls -l
ls -l | reject target num_links user group
ls -l | reject target num_links user group type readonly created accessed
ls -l | reject target num_links user group type readonly created accessed inode
ls
config nu
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
ls
ls -l | reject target num_links user group type readonly created accessed inode
clear
for x in (sys cpu | get cpu_usage) { print (mut y += $x)}
for x in (sys cpu | get cpu_usage) { print ($y += $x)}
mut y = 0
for x in (sys cpu | get cpu_usage) { print ($y += $x)}
for x in (sys cpu | get cpu_usage) {$y += $x}
mut y = 0
for x in (sys cpu | get cpu_usage) {$y += $x}
echo $y
for x in (sys cpu | get cpu_usage) {$y += $x} | echo $y
for x in (sys cpu | get cpu_usage) {$y += $x} && echo $y
for x in (sys cpu | get cpu_usage) {$y += $x}; echo $y
echo $y
mut y = 0
for x in (sys cpu | get cpu_usage) {$y += $x}; echo $y
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
for i in 0..10 {mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu}
clear
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu; mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu and mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu && mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu and mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
echo(sys cpu); mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
echo sys cpu; mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
echo sys cpu; mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
echo sys cpu; mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
config nu
config env
nu --lsp
clear
nvim
config env
nvim .config/nvim/lua/plugins/lspzero.lua
clear
ls
ls -l | find name size | sort-by size
ls -l | select name size | sort-by size
ls -la | select name size | sort-by size
ls -h
ls -ld | select name size | sort-by size
ls -ld ./*/*/* | select name size | sort-by size
ls -d ./*/* | select name size | sort-by size
ls -d ./Code/* | select name size | sort-by size
ls -d ./Code | select name size | sort-by size
ls -d ./.local/ | select name size | sort-by size
ls -d ./.local/* | select name size | sort-by size
ls -d ./.local/*/* | select name size | sort-by size
df 
ds
help
du
du /
cd code
du
rm hw-src/ -r
ls
cd phx/
ls
cd ..
ls
rm phx/
ls
rm phx/ -r
ls
rm --help
cd trash
find -h
clear
stor create
clear
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
sys cpu
sys cpu | find name cpu_usage
sys cpu | get name cpu_usage
sys cpu | select name cpu_usage
sys cpu | get name cpu_usage
clear
sys cpu | select name cpu_usage
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; echo $cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep; echo $cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1; echo $cpu
sleep -h
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1sec; echo $cpu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1sec; debug($cpu)
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1sec; debug(cpu)
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1sec
echo $cpu
$cpu
ls
clear
cd
ls
paru atuin
atuin
atuin history
atuin history list
atuin import auto
clear
config nu
mkdir ~/.local/share/atuin/
atuin init nu | save ~/.local/share/atuin/init.nu
config nu
mut cpu = 0; for x in (sys cpu | get cpu_usage) {$cpu += $x}; sleep 1sec; echo $cpu
reedline
clear
menu
clear
input list
clear
sys cpu | select name cpu_usage
clear
sys cpu | select name cpu_usage
clear
ls
cd api
config nu
clear
atuin stats all
atuin stats
paru
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
sudo reflector -c "US" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist
paru reflector
sudo reflector -c "US" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist
cat /etc/pacman.d/mirrorlist
cat /etc/pacman.d/mirrorlist.bak
paru
paru kondo
cd Code/
kondo
cd
nvim dont-forget!.txt
paru jless
nvim dont-forget!.txt
clear
ls
nvim .config/hypr/hyprland.conf
sys disck
sys disks
clear
paru
clear
cd api
ls
c r
cargo r
taskset -c 0,1,2,3,4 cargo r
less .zsh_history
ls
less .history
rg .history surreal
rg surreal .history
http get http://127.0.0.1:8000/api/search
http post http://127.0.0.1:8000/api/add?name=cp_process_f21
http post --help
http post http://127.0.0.1:8000/api/add?name=cp_process_f21 _
cd api
http post http://127.0.0.1:8000/api/add?name=cp_process_f21& _
http post http://127.0.0.1:8000/api/add?name=cp_process_f21&authors=sweg _
http post http://127.0.0.1:8000/api/add?name=cp_process_f21&authors=sweg
http post http://127.0.0.1:8000/api/add?name=cp_process_f21&authors=sweg None
http get http://127.0.0.1:8000/api/search
nvim src/main.rs
cargo r
surreal start memory -b 127.0.0.1:8001
cd app
cd api
cd app
trunk watch
cw
trunk watch
htop
paru gtop
taskset -c 0,1,2,3,4 trunk watch
cw
http post http://127.0.0.1:8000/api/add?name=cp_process_f21&authors=sweg None
trunk watch
rg tunk ~/.history
rg trunk ~/.history
trunk serve -q --proxy-backend=http://127.0.0.1:8000/api
cargo add yew-components
trunk serve -q --proxy-backend=http://127.0.0.1:8000/api
nvim Cargo.toml
cd api
trunk serve -q --proxy-backend=http://127.0.0.1:8000/api
clear
trunk serve -q --proxy-backend=http://127.0.0.1:8000/api
nvim src/main.rs
nvim src/main.rs
cargo r
surreal start memory -b 127.0.0.1:8001
clear
paru
cargo upgrade
cargo update
cargo install
cd .cargo/bin/
ls
for crate in (ls | get name) {<\n>    cargo binstall $crate<\n>}
for crate in (ls | get name) {<\n>    cargo install $crate<\n>}
for crate in (ls | get name) {<\n>    cargo install $crate --force<\n>}
for crate in (ls | get name) {<\n>    cargo binstall $crate --force<\n>}
cargo install ripgrep
clear
nvim /tmp/
ls
cd /tmp/
cd /tmp
cd /tmp/
cd
cd tmp
cd "tmp"
ls
pwd
cd
ls
pwd
cd tmp
dir
pwd
ls
cd
ls
clear
nvim .gitconfig
git --reset --help
git reset --help
clear
cd app
cat Cargo.toml
clear
cat ./src/main.rs
clear
config --help
options 
opts 
ps
clear
search options
clear
config
env
$env
$env | get config
$env
$HOME 
env.$HOME
file /usr/bin/nu
sudoedit /etc/shells
chsh nu
chsh
sudo chsh nu
chsh --help
chsh -l
chsh -s nu
chsh -s /home/sweglord227/.cargo/bin/nu
sudoedit /etc/shells
file /usr/bin/nu
$env
ls /usr/local/bin/
uniq
uniq --help
$env
$env.path
config nu
config login
panic
clear
panic
clear
cd app
start src/main.rs
cd
start
start --help
clear
start google.com
start https://google.com
clear
mktemp --help
2 + 2
24 ** 2
python
clear
2 + 2
2+2
clear
2 + 2
2048 * 69420
clear
zsh
clear
2 + 2
clear
2048 / 2
2048 ** 2
2048 % 4
2048 mod 4
2048 mod 5
2048 mod 6
2048 mod 2
% 
clear
sys cpu | to json
clear
sys cpu | to yaml
sys cpu | to html
cd app
     cd app
taskset -c 0,1,2,3,4 cargo r
nvim src/main.rs
taskset -c 0,1,2,3,4 cargo r
taskset -c 0,1,2,3,4 trunk watch
cd app
cargo r
ls
rm -rf target/
nvim src/main.rs
taskset -c 0,1,2,3,4 cargo r
taskset -c 0,1,2,3,4 cargo build
clear
paru
clear
cd tf
cd download/maps/
ls
mv ~/Downloads/pl_oldrush_pf2_port1.bsp ./
if ($env.HYPRLAND_INSTANCE_SIGNATURE) == null {<\n>    echo true<\n>}
if ($env.HYPRLAND_INSTANCE_SIGNATURE) != null {<\n>    echo true<\n>}
clear
sleep 3sec
sleep --help
sleep 1day
sleep --help
timer 
clear
sleep --help
find 
find --help
search --help
clear
help commands
help commands | reject command_type usage
help commands | reject command_type usage params
help commands | reject command_type usage params input_output
commands
clear
whoami
whoami --help
usr
id
id --help
touch text.png
file text.png
nvim text.png
file text.png
rm text.png
ls
cd Templates/
ls
cd ..
ls -a Templates/
rm -rf Templates/
ls
cd Videos/
ls
mpv untitled.mp4
ls
file untitled.mp4
mv untitled.mp4 untitled.txt
file untitled.txt
mpv untitled.txt
./untitled.txt
exec --help
clear
run --help
start --help
start untitled.txt
mv untitled.txt untitled.mp4
clear
cd ..
ls
cd `Games/standalones/Undertale Yellow v1_1/`
ls
mpv splash.png
start splash.png
file splash.png
cd 
clear
register --help
plugin --help
registry 
clear
roll --help
roll down --help
roll up --help
roll right --help
clear
ls | roll right
ls | roll left
ls
clear
ls | roll right
ls
git clone https://github.com/fdncred/nu_plugin_file.git
ls
mkdir .config/nushell/plugins
mv nu_plugin_file/ ./.config/nushell/plugins/
cd .config/nushell/plugins/
ls
cd nu_plugin_file/
ls
cargo install --path ./
ls -a
ls -l
cd src/
ls
ls -l
cd ..
ls
cargo install --path .
ls
cd ..
ls
rm -rf nu_plugin_file/
cd
git clone https://github.com/fdncred/nu_plugin_file.git
cd nu_plugin_file/
cargo install --path .
cargo install
cargo install ./
cargo install nu_plugin_file
clear
rustup update
cargo install nu_plugin_file
cargo install --path ./
$env.CARGO_TARGET_DIR = (pwd); cargo install --path .
echo $env.CARGO_TARGET_DIR
cargo install --path ./
ls
ls -a
nvim Cargo.toml
cargo install --path ./
nvim Cargo.toml
ls
cd ..
ls
rm -rf nu_plugin_file/
cd plugins
ls
cd ..
ls
mkdir crates
cd crates
ls
cargo install nu-plugin --path ./
cargo install --help
cargo install --help | less
cargo install --help | cat
cargo install nu-plugin --root ./
cargo add --help | cat
nvim nu
config nu
cargo add --help | bat
cargo add nu-plugin --root ./
cargo add --help | bat
cargo add nu-plugin
cd ..
ls
nump --help
cargo install nump
cd plugins/
git clone https://github.com/fdncred/nu_plugin_file.git
ls
cd nu_plugin_file/
nvim Cargo.toml
cargo install --path ./
nvim Cargo.toml
cargo install --path ./
nvim Cargo.toml
cargo install --path ./
nvim Cargo.toml
cd ..
cd crates/
ls
cd ..
ls
bat ./plugins/nu_plugin_file/Cargo.toml
from --help
ls
rm -rf crates/
ls
cd plugins/
ls
cd nu_plugin_file/
nvim Cargo.toml
cargo install --path ./
nvim Cargo.toml
cargo install --path ./
ls
cd ..
ls
cd nu_plugin_file/
ls
ls -a
cd ..
ls -l
./nu_plugin_file/
cd ..
exec nu_plugin_file/
cd nu_plugin_file/
ls
ls -l
ls -a
taskset -c 0,1,2,3,4 cargo install --path ../
ls $env.CARGO_HOME
cd ..
taskset -c 0,1,2,3,4 cargo install --path nu_plugin_file/
ls
cd nu_plugin_file/
ls
cd ..
ls
plugin add nu_plugin_file/
sudo plugin add nu_plugin_file/
sudo chsh nu
sudo su
sudo plugin add nu_plugin_file/
sudo su
ls
ls /usr/local/bin/
ls /usr/bin/ 
ls /usr/bin/ | find nu
ls /usr/bin/ | find nu-
ls /usr/bin/ | find nu_plugin
ls /usr/bin/ | find plugin
clear
ls
cd ..
ls
cd
ls
cd .cargo/
ls
cd bin/ls
cd bin/
ls
cd ../binstall/
ls
bat crates-v1.json
bat crates-v1.json | from json
crates-v1.json from json
cat crates-v1.json | from json
cd .cargo/binstall/
cat crates-v1.json
cat crates-v1.json | from json
clear
cd ..
ls
cd ..
ls
cd nu_plugin_file/
ls
cd ..
ls
mv nu_plugin_file/ .config/nushell/plugins/
rm -rf .config/nushell/plugins/nu_plugin_file/
mv nu_plugin_file/ .config/nushell/plugins/
cd plugins
ls
plugin add nu_plugin_file/
mv nu_plugin_file/release/nu_plugin_file ./
mv nu_plugin_file/ plugin_build
mv plugin_build/release/nu_plugin_file ./
ls
plugin add nu_plugin_file
rm -rf plugin_build/
file
file --help
clear
ls
ls go
ls go/pkg/sumdb/sum.golang.org/latest
file go/pkg/sumdb/sum.golang.org/latest
cd go/pkg/sumdb/sum.golang.org/
file ./latest
cd 
git clone https://github.com/fdncred/nu_plugin_file
config nu
atuin stats
config nu
config nu 
clear
ls
cd nu_plugin_file/
ls
config nu 
cd api
config nu
cargo install --help
config nu
ls
rm -rf nu_plugin_file/
cd Code/
ls
cd rust/
ls
mkdir nushell
cd nushell/
ls
git clone https://github.com/nushell/nushell
ls
cd ..
ls
mv nushell/nushell/ ./
mv nushell/nushell/ ./ -r
rm nushell -r
git clone https://github.com/nushell/nushell
cd nushell/
ls
cd crates/nu-plugin/
ls
cd ../...
cd nu-plugin
cd ...
cd nu-plugin
cd ....
ls
mkdir nushell-stuffs
mv nushell nushell-stuffs/
cd nushell-stuffs/
ls
git clone https://github.com/fdncred/nu_plugin_file
cd nu_plugin_file/
cargo install --path ./
ls /
cd ~
ls ~
ls
cd file
ls
cd target/
ls
cd release/
ls
rm ~/.config/nushell/plugins/nu_plugin_file
cp nu_plugin_file ~/.config/nushell/plugins/
cd plugins
ls
plugin add nu_plugin_file
ls
file go
plugin use 'file'
file go/pkg/sumdb/sum.golang.org/latest
file ./go/pkg/sumdb/sum.golang.org/latest
cd nu_plugin_file/
ls
cd ..
ls
file
file ~/go/pkg/sumdb/sum.golang.org/latest
ls
file ~/dont-forget!.txt
file dont-forget!.txt
touch example.txt
"hello world!" | example.txt
"hello world!" | print example.txt
clear
print --help
clear
rm example.txt
touch --help
clear
write --help
clear
"hello world!" | save example.txt
file example.txt
register --help
cd plugins
register nu_plugin_file
plugin use 'file'
cd
file example.txt
clear
rm example.txt
"hello world!" | save example.txt
file example.txt
fetch
fastfetch
fastfetch --help
fastfetch --help | bat
fastfetch -l none
file example.txt
nvim src/main.rs
ls
cd src/
ls
nvim main.rs
ls
cd ..
ls
nvim Cargo.toml
cd ...
ls
mkdir debug
cd debug/
cd ..
rm -rf debug/
cargo init debug-home-test
ls
cd debug-home-test/
ls
cargo add home
nvim src/main.rs
cr
cargo r
nvim src/main.rs
cargo re
cargo r
cd rust
ls
cd nushell-stuffs/nu_plugin_file/
ls
nvim src/main.rs
cd ..
ls
mv debug-home-test/ nushell-stuffs/
cd nushell-stuffs/
ls
nvim nu_plugin_file/Cargo.toml
cd ..
cd nushell-stuffs/
cd debug-home-test/
ls
nvim Cargo.toml
cd debug-home-test/
cd Code/rust/nushell-stuffs/debug-home-test/
cargo r
cargo c
cargo r
nvim src/main.rs
cd ..
ls
rm -rf nu_plugin_file/
git clone git@github.com:sweglord227/nu_plugin_file.git
cd nu_plugin_file/
ls
cargo r
cargo r ~/example.txt
cd nu_plugin_file/
cd ..
cargo add this-error
cargo add this-err
cargo add thiserror
nvim src/main.rs
cd ..
ls
cd nu_plugin_file/
cargo c
bacon check
$env.PATH
config env
cd nu_plugin_file/
cd ..
bacon check
cd nu_plugin_file/
cd ..
nvim Cargo.toml
bacon clippy
cargo build
nvim Cargo.toml
cargo clean
cargo build
rm example.txt
"hello world!" | save example.txt
file example.txt
file ~/example.txt
file /home/sweglord227/example.txt
git add --help
git add -u
git status
bacon clippy
git commit
git diff 
cd ..
ls
cd nu_plugin_file/
git reset --help
git reset .
git diff
nvim src/main.rs
git commit
git add -s
git add -u
git commit
nvim Cargo.toml
cargo clean
ls
rm Cargo.lock
cargo build
git diff | bat
nvim Cargo.toml
cargo update
nvim Cargo.toml
cargo build
git diff | bat
cargo add -u
git add -u
git reset .
cd nu_plugin_file/
ls
cd debug/
ls
mv nu_plugin_file ~/.config/nushell/plugins/
plugin use 'file'
file ./nu_plugin_file.d
file example.txt
rm .config/nushell/plugins/
cd .config/nushell/plugins/
ls
rm nu_plugin_file
cargo b
ls
mv nu_plugin_file ~/.config/nushell/plugins/
plugin add nu_plugin_file
file
file example.txt
cargo b
ls
rm ~/.config/nushell/plugins/nu_plugin_file
plugin add nu_plugin_file
file nu_plugin_file
file example.txt
git diff | bat
git reset .
clear
clear
clippy check
cargo b
plugin add nu_plugin_file
file example.txt
cd ..
nvim Cargo.toml
cargo b
cd target/debug/
plugin add nu_plugin_file
file example.txt
plugin rm 'file'
ls
plugin add nu_plugin_file
file example.txt
cargo b
plugin add nu_plugin_file
file example.txt
cargo b
file example.txt
plugin add nu_plugin_file
file example.txt
cargo b
file example.txt
file asdsadasdsa
clear
file asdasdasd
cargo test
nvim src/main.rs
clear
clear
cd ...
ls
nvim Cargo.toml
git add -u
git commit
git push
git diff | bat
cargo build --release
cd target/release/
ls
cp nu_plugin_file ~/.config/nushell/plugins/
cd plugins
plugin add nu_plugin_file
file example.txt
cd Videos/
file untitled.mp4
/bin/file untitled.mp4
file nu_plugin_file
file untitled.mp4
file BL_proxy/
cd nu_plugin_file
nvim Cargo.toml
htop
copy 
wl-copy 
cd
lines --help
open example.txt | wl-copy 
paste
open example.txt | copy 
paste
clear
plugin list
fdisk -l
sudo ! 
sudo fdisk -l
sudo mount /dev/sdb /mnt/
cd /mnt/
cd /mnt
cd /
cd /mnt
ls
umount ./
fuck
sudo umount ./
sudo umount ./ -f
umount --help
cd ..
sudo umount mnt/
write --help
cd ~/Downloads/
ls
open nixos-minimal-24.05.2580.194846768975-x86_64-linux.iso | save /dev/sdb 
sudo open nixos-minimal-24.05.2580.194846768975-x86_64-linux.iso | save -f /dev/sdb
open nixos-minimal-24.05.2580.194846768975-x86_64-linux.iso | sudo save -f /dev/sdb
config nu
sudo su
clear
cd
ls
rm example.txt
bat dont-forget!.txt
clear
cd Downloads/
ls
rm nixos-minimal-24.05.2580.194846768975-x86_64-linux.iso
rm pfp.png ultiduo_baloo.rar -r hit-single/ `favicon_io(1).zip`
ls
mkdir ../Pictures/pfp
mv sweg.jpg ../Pictures/pfp/ 
clear
cd Downloads/
ls
sudo fdisk -l
cd .config/
ls
eza
eza -l
eza -l --git
cd .config/
git add nvim hypr
git commit
git push
